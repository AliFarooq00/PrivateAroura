AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: |
  Aurora PostgreSQL Public Demo - VPC - Security Groups - Subnets - Subnet Groups - EC2

Resources:
  AuroraPublicDemoVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/20
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: AuroraPublicDemoVPC
        - Key: stack
          Value: demo

  AuroraPublicSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AuroraPublicDemoVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.10.5.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AuroraPublicSubnetAZ1

  AuroraPublicSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AuroraPublicDemoVPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.10.7.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AuroraPublicSubnetAZ2

  AuroraPublicSubnetAZ3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AuroraPublicDemoVPC
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: 10.10.9.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AuroraPublicSubnetAZ3

  AuroraPrivateSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AuroraPublicDemoVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.10.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: AuroraPrivateSubnetAZ1

  AuroraPrivateSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AuroraPublicDemoVPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.10.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: AuroraPrivateSubnetAZ2

  AuroraPrivateSubnetAZ3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AuroraPublicDemoVPC
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: 10.10.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: AuroraPrivateSubnetAZ3

  AuroraDBSubnetGroupPrivate:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Aurora PostgreSQL
      SubnetIds:
        - !Ref AuroraPrivateSubnetAZ1
        - !Ref AuroraPrivateSubnetAZ2
        - !Ref AuroraPrivateSubnetAZ3
      DBSubnetGroupName: auroraprivatesubnetgroup

  AuroraDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AuroraDBSecurityGroup
      GroupDescription: Security group for Aurora PostgreSQL
      VpcId: !Ref AuroraPublicDemoVPC
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

  AuroraEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AuroraEC2SecurityGroup
      GroupDescription: Security group for EC2 Bastion Host
      VpcId: !Ref AuroraPublicDemoVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  InboundRuleForAuroraEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn:
      - AuroraEC2SecurityGroup
      - AuroraDBSecurityGroup
    Properties:
      GroupId: !Ref AuroraDBSecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref AuroraEC2SecurityGroup

  OutboundRuleForAuroraEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    DependsOn:
      - AuroraEC2SecurityGroup
      - AuroraDBSecurityGroup
    Properties:
      GroupId: !Ref AuroraEC2SecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      DestinationSecurityGroupId: !Ref AuroraDBSecurityGroup

  AuroraRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: AuroraRouteTable
      VpcId: !Ref AuroraPublicDemoVPC

  AuroraRouteTableSubnetAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - AuroraRouteTable
      - AuroraPublicSubnetAZ1
    Properties:
      RouteTableId: !Ref AuroraRouteTable
      SubnetId: !Ref AuroraPublicSubnetAZ1

  AuroraRouteTableSubnetAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - AuroraRouteTable
      - AuroraPublicSubnetAZ2
    Properties:
      RouteTableId: !Ref AuroraRouteTable
      SubnetId: !Ref AuroraPublicSubnetAZ2

  AuroraRouteTableSubnetAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: 
      - AuroraRouteTable
      - AuroraPublicSubnetAZ3
    Properties:
      RouteTableId: !Ref AuroraRouteTable
      SubnetId: !Ref AuroraPublicSubnetAZ3

  AuroraInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: AuroraInternetGateway

  RouteToAuroraInternetGateway:
    Type: AWS::EC2::Route
    DependsOn: AuroraVPCGatewayAttachment
    Properties:
       RouteTableId: !Ref AuroraRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref AuroraInternetGateway

  AuroraVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn: AuroraInternetGateway
    Properties:
      InternetGatewayId: !Ref AuroraInternetGateway
      VpcId: !Ref AuroraPublicDemoVPC

  AuroraEC2JumpHostKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyFormat: pem
      KeyName: AuroraEC2JumpHostKeyPair
      KeyType: rsa

  AuroraEC2Instance:
    Type: AWS::EC2::Instance
    DependsOn: AuroraEC2JumpHostKeyPair
    Properties:
      ImageId: ami-06c8f2ec674c67112
      InstanceType: t2.micro
      KeyName: AuroraPublicDemoConnect
      Monitoring: true
      DisableApiTermination: true
      CreditSpecification:
        CPUCredits: Standard
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp3
            VolumeSize: 8
            DeleteOnTermination: true
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref AuroraPublicSubnetAZ1
          GroupSet:
            - !Ref AuroraEC2SecurityGroup

  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      EngineVersion: 16.6
      StorageType: aurora
      DBClusterIdentifier: aurora-public-demo-cluster
      DatabaseName: aurora_demo_main
      MasterUsername: master_user
      ManageMasterUserPassword: true
      VpcSecurityGroupIds:
        - !Ref AuroraDBSecurityGroup
      Port: 5432
      DBSubnetGroupName: !Ref AuroraDBSubnetGroupPrivate
      AvailabilityZones:
        - us-east-2a
        - us-east-2b
        - us-east-2c
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 2
      StorageEncrypted: true
      PerformanceInsightsEnabled: true
      EngineLifecycleSupport: open-source-rds-extended-support-disabled
      EnableHttpEndpoint: true
      DeletionProtection: true

  AuroraWriterInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: aurora-public-demo-writer-instance-2a
      Engine: aurora-postgresql
      DBInstanceClass: db.serverless
      DBClusterIdentifier: !Ref AuroraCluster
      PubliclyAccessible: false
      AvailabilityZone: us-east-2a

Outputs:
  rdsClusterArn:
      Value: !GetAtt AuroraCluster.DBClusterArn 
  rdsClusterSecretArn:
      Value: !GetAtt AuroraCluster.MasterUserSecret.SecretArn